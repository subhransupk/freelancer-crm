// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: i9JkwxpqHzRfTtai9PKqEh
// Component: BnnR4gnJbKMs

import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";
import { useRouter } from "next/router";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";

import {
  executePlasmicDataOp,
  usePlasmicDataOp,
  usePlasmicInvalidate
} from "@plasmicapp/react-web/lib/data-sources";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import DashboardLayouts from "../../DashboardLayouts"; // plasmic-import: c6FhDN7tOTsw/component
import { Fetcher } from "@plasmicapp/react-web/lib/data-sources";

import "@plasmicapp/react-web/lib/plasmic.css";

import plasmic_antd_5_hostless_css from "../antd_5_hostless/plasmic_antd_5_hostless.module.css"; // plasmic-import: ohDidvG9XsCeFumugENU3J/projectcss
import plasmic_plasmic_rich_components_css from "../plasmic_rich_components/plasmic_plasmic_rich_components.module.css"; // plasmic-import: jkU633o1Cz7HrJdwdxhVHk/projectcss
import projectcss from "./plasmic_freelancer_crm.module.css"; // plasmic-import: i9JkwxpqHzRfTtai9PKqEh/projectcss
import sty from "./PlasmicDashboard.module.css"; // plasmic-import: BnnR4gnJbKMs/css

createPlasmicElementProxy;

export type PlasmicDashboard__VariantMembers = {};
export type PlasmicDashboard__VariantsArgs = {};
type VariantPropType = keyof PlasmicDashboard__VariantsArgs;
export const PlasmicDashboard__VariantProps = new Array<VariantPropType>();

export type PlasmicDashboard__ArgsType = {};
type ArgPropType = keyof PlasmicDashboard__ArgsType;
export const PlasmicDashboard__ArgProps = new Array<ArgPropType>();

export type PlasmicDashboard__OverridesType = {
  dashboard?: p.Flex<"div">;
  dashboardLayouts?: p.Flex<typeof DashboardLayouts>;
};

export interface DefaultDashboardProps {}

const $$ = {};

function useNextRouter() {
  try {
    return useRouter();
  } catch {}
  return undefined;
}

function PlasmicDashboard__RenderFunc(props: {
  variants: PlasmicDashboard__VariantsArgs;
  args: PlasmicDashboard__ArgsType;
  overrides: PlasmicDashboard__OverridesType;
  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);

  const $props = {
    ...args,
    ...variants
  };

  const __nextRouter = useNextRouter();
  const $ctx = ph.useDataEnv?.() || {};
  const refsRef = React.useRef({});
  const $refs = refsRef.current;

  const currentUser = p.useCurrentUser?.() || {};

  let [$queries, setDollarQueries] = React.useState<
    Record<string, ReturnType<typeof usePlasmicDataOp>>
  >({});

  const new$Queries: Record<string, ReturnType<typeof usePlasmicDataOp>> = {
    totalUsersByMonthCustomRange: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "2dd1e791-407c-4549-b72a-b1cc8ed8fa21",
        userArgs: {
          query: [$state.start.value]
        },
        cacheKey: `plasmic.$.2dd1e791-407c-4549-b72a-b1cc8ed8fa21.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    totalOrdersByDateRange: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "27b70598-f7f6-4c37-aef5-2193edc0d118",
        userArgs: {
          query: [$state.start.value, $state.start.value]
        },
        cacheKey: `plasmic.$.27b70598-f7f6-4c37-aef5-2193edc0d118.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    currentRevenue: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "2ab44eae-1c06-4fef-9c93-d81363fb39e5",
        userArgs: {
          query: [$state.start.value, $state.start.value]
        },
        cacheKey: `plasmic.$.2ab44eae-1c06-4fef-9c93-d81363fb39e5.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    currentTotalCustomers: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "e3fd58f0-bc49-46b9-a660-327795d7f576",
        userArgs: {},
        cacheKey: `plasmic.$.e3fd58f0-bc49-46b9-a660-327795d7f576.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    _12MonthRevenue: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "355d7715-80f0-43a4-bf5f-6a358a0bbf19",
        userArgs: {
          query: [$state.start.value]
        },
        cacheKey: `plasmic.$.355d7715-80f0-43a4-bf5f-6a358a0bbf19.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    moMUserGrowth: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "1c50784f-f7fa-4e97-82b1-b0494c78a3be",
        userArgs: {
          query: [
            $state.start.value,
            $state.start.value,
            $state.start.value,
            $state.start.value
          ]
        },
        cacheKey: `plasmic.$.1c50784f-f7fa-4e97-82b1-b0494c78a3be.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    moMOrderGrowth: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "6ce984b3-ab19-43ac-96c4-339c17d38651",
        userArgs: {
          query: [
            $state.start.value,
            $state.start.value,
            $state.start.value,
            $state.start.value
          ]
        },
        cacheKey: `plasmic.$.6ce984b3-ab19-43ac-96c4-339c17d38651.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    moMAvgOrderGrowth: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "ea41e8b6-4dbd-422b-98e9-bac4d433e8a8",
        userArgs: {
          query: [
            $state.start.value,
            $state.start.value,
            $state.start.value,
            $state.start.value
          ]
        },
        cacheKey: `plasmic.$.ea41e8b6-4dbd-422b-98e9-bac4d433e8a8.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    moMRevenueGrowth: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "e224152a-696f-4222-9187-862206ac56c2",
        userArgs: {
          query: [
            $state.start.value,
            $state.start.value,
            $state.start.value,
            $state.start.value
          ]
        },
        cacheKey: `plasmic.$.e224152a-696f-4222-9187-862206ac56c2.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    currentAvgOrder: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "0cc113ce-7139-466a-9bd0-663ec938695b",
        userArgs: {
          query: [$state.start.value, $state.start.value]
        },
        cacheKey: `plasmic.$.0cc113ce-7139-466a-9bd0-663ec938695b.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    topCountriesByRevenue: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "f6c68558-77c6-446b-b162-f77941cafe88",
        userArgs: {},
        cacheKey: `plasmic.$.f6c68558-77c6-446b-b162-f77941cafe88.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    topProductsByQuantitySold: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "c415365f-215e-4966-9a2f-618019a0207d",
        userArgs: {
          query: [$state.start.value, $state.start.value]
        },
        cacheKey: `plasmic.$.c415365f-215e-4966-9a2f-618019a0207d.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    totalProductsSold: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "42d2f772-0426-4a26-9363-718ed4880227",
        userArgs: {},
        cacheKey: `plasmic.$.42d2f772-0426-4a26-9363-718ed4880227.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    }),
    topCategoriesByOrders: usePlasmicDataOp(() => {
      return {
        sourceId: "h96au2kUnobfw5HEkWNKqj",
        opId: "d8d5a76d-1ee5-4ded-afce-aab020527005",
        userArgs: {
          query: [
            $state.start.value,
            $state.start.value,
            $state.start.value,
            $state.start.value
          ]
        },
        cacheKey: `plasmic.$.d8d5a76d-1ee5-4ded-afce-aab020527005.$.`,
        invalidatedKeys: null,
        roleId: null
      };
    })
  };
  if (Object.keys(new$Queries).some(k => new$Queries[k] !== $queries[k])) {
    setDollarQueries(new$Queries);

    $queries = new$Queries;
  }

  return (
    <React.Fragment>
      <Head>
        <meta name="twitter:card" content="summary" />
        <title key="title">{PlasmicDashboard.pageMetadata.title}</title>
        <meta
          key="og:title"
          property="og:title"
          content={PlasmicDashboard.pageMetadata.title}
        />
        <meta
          key="twitter:title"
          name="twitter:title"
          content={PlasmicDashboard.pageMetadata.title}
        />
      </Head>

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        <div
          data-plasmic-name={"dashboard"}
          data-plasmic-override={overrides.dashboard}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_antd_5_hostless_css.plasmic_tokens,
            plasmic_plasmic_rich_components_css.plasmic_tokens,
            sty.dashboard
          )}
        >
          <DashboardLayouts
            data-plasmic-name={"dashboardLayouts"}
            data-plasmic-override={overrides.dashboardLayouts}
            className={classNames("__wab_instance", sty.dashboardLayouts)}
          />
        </div>
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  dashboard: ["dashboard", "dashboardLayouts"],
  dashboardLayouts: ["dashboardLayouts"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  (typeof PlasmicDescendants)[T][number];
type NodeDefaultElementType = {
  dashboard: "div";
  dashboardLayouts: typeof DashboardLayouts;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicDashboard__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicDashboard__VariantsArgs;
    args?: PlasmicDashboard__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicDashboard__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    /* Specify args directly as props*/ Omit<
      PlasmicDashboard__ArgsType,
      ReservedPropsType
    > &
    /* Specify overrides for each element directly as props*/ Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    /* Specify props for the root element*/ Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: PlasmicDescendants[nodeName],
          internalArgPropNames: PlasmicDashboard__ArgProps,
          internalVariantPropNames: PlasmicDashboard__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicDashboard__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "dashboard") {
    func.displayName = "PlasmicDashboard";
  } else {
    func.displayName = `PlasmicDashboard.${nodeName}`;
  }
  return func;
}

function withPlasmicPageGuard<P extends object>(
  WrappedComponent: React.ComponentType<P>
) {
  const PageGuard: React.FC<P> = props => (
    <p.PlasmicPageGuard
      minRole={null}
      appId={"i9JkwxpqHzRfTtai9PKqEh"}
      authorizeEndpoint={"https://studio.plasmic.app/authorize"}
      canTriggerLogin={false}
    >
      <WrappedComponent {...props} />
    </p.PlasmicPageGuard>
  );

  return PageGuard;
}

export const PlasmicDashboard = Object.assign(
  // Top-level PlasmicDashboard renders the root element
  withPlasmicPageGuard(makeNodeComponent("dashboard")),
  {
    // Helper components rendering sub-elements
    dashboardLayouts: makeNodeComponent("dashboardLayouts"),

    // Metadata about props expected for PlasmicDashboard
    internalVariantProps: PlasmicDashboard__VariantProps,
    internalArgProps: PlasmicDashboard__ArgProps,

    // Page metadata
    pageMetadata: {
      title: "Dashboard",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicDashboard;
/* prettier-ignore-end */
